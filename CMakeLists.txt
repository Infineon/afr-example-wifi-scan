# To build, run the following commands in current directory:
# cmake -DVENDOR=cypress -DBOARD=CY8CPROTO_062_4343W -DCOMPILER=arm-gcc -S . -B build -G Ninja -DCMAKE_TOOLCHAIN_FILE=../../../tools/cmake/toolchains/arm-gcc.cmake
# cmake --build build

cmake_minimum_required(VERSION 3.13)

# Configure compiler assembler for code outside amazon-freertos source tree
enable_language(C)
enable_language(ASM)

set(afr_app_name "afr-example-wifi-scan")
project(${afr_app_name})

set(AFR_PATH "${CMAKE_SOURCE_DIR}/../../..")
set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")

string(REPLACE "_" "-" APP_BOARD_NAME "${BOARD}")

add_definitions(-DCY_RETARGET_IO_CONVERT_LF_TO_CRLF)

# Path to this application directory
get_filename_component(CY_APP_DIR "${CMAKE_CURRENT_LIST_DIR}" ABSOLUTE)
set(AFR_BOARD "${VENDOR}.${BOARD}" CACHE INTERNAL "")
set(AFR_TOOLCHAIN "${COMPILER}" CACHE INTERNAL "")

# Configure include for freertos config files, aws config files, and cypress psoc6_core header files before add_subdirectory
set(BOARD_DEMO_DIR "${AFR_PATH}/vendors/cypress/boards/${BOARD}/aws_demos")
set(BOARD_CY_CODE_DIR "${BOARD_DEMO_DIR}/application_code/cy_code")
set(additional_include_dirs "${BOARD_DEMO_DIR}/config_files"
                            "${BOARD_CY_CODE_DIR}"
                            "${BOARD_CY_CODE_DIR}/GeneratedSource"
                            "${AFR_PATH}/demos/include"
                            "${AFR_PATH}/libraries/abstractions/platform/include/platform"
                            "${AFR_PATH}/libraries/c_sdk/standard/mqtt/include")

if (EXISTS "${BOARD_CY_CODE_DIR}/SDIO_HOST")
    list(APPEND additional_include_dirs "${BOARD_CY_CODE_DIR}/SDIO_HOST")
endif()

set(CY_INCLUDE_DIRS ${additional_include_dirs} CACHE INTERNAL "")

# build amazon-freertos as library
set(LIB_MODE 1)

# build amazon-freertos
add_subdirectory(${AFR_PATH} "${AFR_PATH}/build")

# add executable target source files
add_executable(${afr_app_name} "${CMAKE_SOURCE_DIR}/main.c"
                               "${CMAKE_SOURCE_DIR}/source/wifi_scan.c")

include("${AFR_PATH}/vendors/cypress/MTB/psoc6/cmake/cy_defines.cmake")
include("${AFR_PATH}/vendors/cypress/MTB/psoc6/cmake/cy_create_exe_target.cmake")

# Add board specific files (taken from amazon-freertos/vendors/cypress/boards/${BOARD}/aws_demos/application_code/cy_code).
# Customize as necessary or replace with another cypress board.
# The code in ${BSP_DIR}/GeneratedSource is generated by the Configurator tools while saving ${BSP_DIR}/design.modus.
# Exclude the BSP design.modus when CUSTOM_DESIGN_MODUS is defined.
cy_find_files(exe_glob_files DIRECTORY "${BOARD_CY_CODE_DIR}")
if (DEFINED CUSTOM_DESIGN_MODUS)
    foreach(item ${exe_glob_files})
        if(${item} MATCHES "GeneratedSource")
            list(REMOVE_ITEM exe_glob_files ${item})
        endif(${item} MATCHES "GeneratedSource")
    endforeach()
endif()
cy_get_src(exe_source_files ITEMS "${exe_glob_files}")
target_sources(${afr_app_name} PUBLIC "${exe_source_files}")

# Application extra sources
file(GLOB_RECURSE CY_APP_EXTRA_SOURCES "${AFR_PATH}/libraries/c_sdk/standard/mqtt/src/*c"
                                       "${AFR_PATH}/demos/mqtt/*.c")
target_sources(${afr_app_name} PUBLIC "${CY_APP_EXTRA_SOURCES}" )

# add linker script and map file generation
cy_add_linker_options(EXE_APP_NAME ${afr_app_name})

# Set up dependent linked libraries
target_link_libraries(${afr_app_name}  PUBLIC
    AFR::demo_base
    AFR::common
    AFR::utils
    AFR::wifi
    AFR::wifi::mcu_port
    psoc6_core # Pulls in defines, includes, source code for psoc6 devices
)
